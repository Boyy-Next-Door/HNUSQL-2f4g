/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client.GUI;

import client.tinyClient;
import com.alibaba.fastjson.JSONArray;
import com.alibaba.fastjson.JSONObject;
import com.sqlmagic.tinysql.entities.BaseResponse;
import com.sqlmagic.tinysql.protocol.TableColumn;
import com.sqlmagic.tinysql.utils.MyTableUtil;


import javax.swing.*;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
/**
 *
 * @author Shinelon
 */
public class DBMSFrame extends javax.swing.JFrame {

    /**
     * Creates new form DBMSFrame
     */
    public DBMSFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        initDBMS();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList_database = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane_excute = new javax.swing.JTabbedPane();
        jTabbedPane_1_1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList_tables = new javax.swing.JList<>();
        jTabbedPane_2_1 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable_tableContent = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable_tableDesign = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTable_index = new javax.swing.JTable();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        jTextPane_cmd = new javax.swing.JTextPane();
        jTabbedPane_result = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextPane_resultInfo = new javax.swing.JTextPane();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane8 = new javax.swing.JScrollPane();
        jTable_resultContent = new javax.swing.JTable();
        jButton_save = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("cool_DB");

        jList_database.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList_database);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 589, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jTabbedPane_excute.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane_excuteStateChanged(evt);
            }
        });
        jTabbedPane_excute.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jTabbedPane_excuteFocusGained(evt);
            }
        });
        jTabbedPane_excute.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTabbedPane_excuteMouseClicked(evt);
            }
        });

        jList_tables.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList_tables);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1019, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 472, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane_1_1.addTab("tables", jPanel3);

        jTabbedPane_excute.addTab("对象", jTabbedPane_1_1);

        jTable_tableContent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "id", "name", "phone", "major"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable_tableContent);
        if (jTable_tableContent.getColumnModel().getColumnCount() > 0) {
            jTable_tableContent.getColumnModel().getColumn(0).setHeaderValue("id");
            jTable_tableContent.getColumnModel().getColumn(1).setHeaderValue("name");
            jTable_tableContent.getColumnModel().getColumn(2).setHeaderValue("phone");
            jTable_tableContent.getColumnModel().getColumn(3).setHeaderValue("major");
        }

        jTabbedPane_2_1.addTab("查看表", jScrollPane3);

        jTable_tableDesign.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "名", "类型", "长度", "小数点", "不是null", "键", "注释"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane4.setViewportView(jTable_tableDesign);

        jTabbedPane_2_1.addTab("设计表", jScrollPane4);

        jTable_index.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "名", "字段", "索引类型", "索引方法"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane5.setViewportView(jTable_index);

        jTabbedPane_2_1.addTab("索引", jScrollPane5);

        jTabbedPane_excute.addTab("表", jTabbedPane_2_1);

        jScrollPane7.setViewportView(jTextPane_cmd);

        jScrollPane6.setViewportView(jTextPane_resultInfo);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 1039, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTabbedPane_result.addTab("信息", jPanel5);

        jTable_resultContent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane8.setViewportView(jTable_resultContent);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 1039, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 221, Short.MAX_VALUE)
        );

        jTabbedPane_result.addTab("结果", jPanel6);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane7)
            .addComponent(jTabbedPane_result)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane_result, javax.swing.GroupLayout.PREFERRED_SIZE, 250, Short.MAX_VALUE))
        );

        jTabbedPane_excute.addTab("查询", jPanel4);

        jButton_save.setText("删除选中表");
        jButton_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_saveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jTabbedPane_excute)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton_save, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jButton_save, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane_excute, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jMenuBar1.setToolTipText("");

        jMenu1.setText("File");

        jMenuItem2.setText("jMenuItem2");
        jMenu1.add(jMenuItem2);

        jMenuItem3.setText("jMenuItem3");
        jMenu1.add(jMenuItem3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem1.setText("jMenuItem1");
        jMenu2.add(jMenuItem1);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void jButton_saveActionPerformed(java.awt.event.ActionEvent evt) {                                             
        //执行选中内容
        switch (save_btn_mode) {
            //删除表
            case 0: {
                int value = JOptionPane.showConfirmDialog(this, "确定删除表\'" + jList_tables.getSelectedValue() + "\'吗？");
                if (value == JOptionPane.YES_OPTION) {
                     tinyClient client = tinyClient.getClient();
                     BaseResponse resp=null;
                    try {
                       resp   = client.Drop("DROP TABLE "+jList_tables.getSelectedValue());
                    } catch (Exception ex) {
                        Logger.getLogger(DBMSFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(resp.status==0){
                                JOptionPane.showMessageDialog(this, "删除表成功", null, JOptionPane.INFORMATION_MESSAGE);
                    }


                } else if (value == JOptionPane.NO_OPTION) {

                    System.out.println("你选择了否");

                } else if (value == JOptionPane.CANCEL_OPTION) {

                    System.out.println("你选择了取消");

                } else if (value == JOptionPane.CLOSED_OPTION) {

                    System.out.println("你直接将窗体关闭了，没有选择");
                }
                break;
            }
            //刷新
            case 1: {
                    String selectedValue = jList_tables.getSelectedValue();
                    //切换表数据
                    useTable(selectedValue);
                break;
            }
            case 2: {
                //获取cmd中的选中内容
                String selectedText = jTextPane_cmd.getSelectedText();
                JOptionPane.showMessageDialog(this, "选中内容：" + selectedText, null, JOptionPane.INFORMATION_MESSAGE);
                //初步处理选中的SQL语句 把分号去掉
                 selectedText = selectedText.replace(";","");
                 tinyClient client = tinyClient.getClient();
                 BaseResponse resp=null;
                 try {
                     resp = client.executeSQL(selectedText);                     
                    } catch (Exception ex) {
                        Logger.getLogger(DBMSFrame.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if(resp.status==0){
                                JOptionPane.showMessageDialog(this, "执行成功", null, JOptionPane.INFORMATION_MESSAGE);
                    }else{
                        if(resp==null||resp.status!=0){
                                JOptionPane.showMessageDialog(this, "执行失败："+resp.msg, null, JOptionPane.INFORMATION_MESSAGE);
                    }
                    }
            }

        }

    }                                            

    private void jTabbedPane_excuteMouseClicked(java.awt.event.MouseEvent evt) {                                                
        // TODO add your handling code here:
    }                                               

    private void jTabbedPane_excuteFocusGained(java.awt.event.FocusEvent evt) {                                               
   
      
    }                                              

    private void jTabbedPane_excuteStateChanged(javax.swing.event.ChangeEvent evt) {                                                
        //        JOptionPane.showMessageDialog(this, "切换选项卡" , null, JOptionPane.INFORMATION_MESSAGE);
        //选项卡切换 根据不同的页面做出相应改变
        int selectedIndex = jTabbedPane_excute.getSelectedIndex();
        switch (selectedIndex) {
            //第一页 查看所有表
            case 0:
                save_btn_mode = 0;
                jButton_save.setText("删除选中表");
                break;
            //第二页 查看表、设计表、索引
            case 1:
                save_btn_mode = 1;
                jButton_save.setText("刷新");
                break;
            //第三页 cmd
            case 2:
                //修改save按钮的功能
                save_btn_mode = 2;
                jButton_save.setText("执行选中内容");
                break;

        }

    }                                               

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DBMSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DBMSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DBMSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DBMSFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DBMSFrame().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify                     
    private javax.swing.JButton jButton_save;
    private javax.swing.JList<String> jList_database;
    private javax.swing.JList<String> jList_tables;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane_1_1;
    private javax.swing.JTabbedPane jTabbedPane_2_1;
    private javax.swing.JTabbedPane jTabbedPane_excute;
    private javax.swing.JTabbedPane jTabbedPane_result;
    private javax.swing.JTable jTable_index;
    private javax.swing.JTable jTable_resultContent;
    private javax.swing.JTable jTable_tableContent;
    private javax.swing.JTable jTable_tableDesign;
    private javax.swing.JTextPane jTextPane_cmd;
    private javax.swing.JTextPane jTextPane_resultInfo;
    // End of variables declaration                   

    //自定义变量
    private static int save_btn_mode = 0;     //保存按钮多功能 0-删除表 1-保存修改  2-执行选中内容

    //获取数据库相关资源信息 刷新到UI上
    private void initDBMS() {

        jList_database.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                do_list_databases_valueChanged(e);
            }
        });
        jList_tables.addListSelectionListener(new ListSelectionListener() {
            public void valueChanged(ListSelectionEvent e) {
                do_list_tables_valueChanged(e);
            }
        });
        BaseResponse resp =null;
        try {
            //获取数据库列表数据
            resp =  tinyClient.getClient().getDatabases();
        } catch (Exception ex) {
            Logger.getLogger(DBMSFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
      if(resp.getStatus()!=0){
          //获取数据失败
           jList_database.setListData(new String[0]);
      }else{
          //装填数据库列表的数据
          System.out.println(resp);
          jList_database.setListData(JSONObject.parseObject(resp.data.toString(),String[].class));

      }

    }

    protected void do_list_databases_valueChanged(ListSelectionEvent e) {
        //修改选中的数据库
        String selectedValue = jList_database.getSelectedValue();
        JOptionPane.showMessageDialog(this, "当前选择的数据库：" + selectedValue, null, JOptionPane.INFORMATION_MESSAGE);
        //切换数据库
        setTables(selectedValue);

    }

    
    protected void do_list_tables_valueChanged(ListSelectionEvent e) {
        //修改选中的数据库
        String selectedValue = jList_tables.getSelectedValue();
        JOptionPane.showMessageDialog(this, "当前选择的表：" + selectedValue, null, JOptionPane.INFORMATION_MESSAGE);
        //切换表数据
        useTable(selectedValue);

    }
    
    //将Pane_tables中的内容改成当前选中数据库的表
    private void setTables(String databaseName)  {
        tinyClient client = tinyClient.getClient();
        //根据数据库名获取tables集合
        BaseResponse resp =null;
        try {
            //首先切换数据库
            BaseResponse resp1 = client.useDatabase("USE "+databaseName);
            System.out.println(resp1);
            
           resp  =client .getTables();
        } catch (Exception ex) {
            Logger.getLogger(DBMSFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        //将list_tables内容设置为新的表名
        jList_tables.setListData(JSONObject.parseObject(resp.data.toString(),  String[].class));
        System.out.println(resp);
    }
    
        //将jTable_tableContent中的内容改成当前选中的表
    private void useTable(String tableName) {
        //获取table数据
        tinyClient client = tinyClient.getClient();
        BaseResponse resp1 = null;
        BaseResponse resp2 = null;

        try {
           resp1 =  client.Select("SELECT * FROM "+tableName);
           resp2 =  client.getTableField(tableName);
        } catch (Exception ex) {
            Logger.getLogger(DBMSFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(resp1.status!=0){
            //获取表数据失败  无权查看
            JOptionPane.showMessageDialog(this, "无权查看当前表", null, JOptionPane.INFORMATION_MESSAGE);
        }
        else{
             //设置‘查看表’模块内容
            setTableContent((MyTableUtil)resp1.data);
            if(resp2.status==0){
                 //设置‘设计表’模块内容
                 JSONArray array =  (JSONArray)resp2.data;
            setTableDesign((ArrayList<TableColumn>)array.toJavaList(TableColumn.class));
            }

            //设置‘索引’模块内容
     //       setTableIndex(tableName);
        }

       
    }

    
    
    
    
    


    /**
     * 设置表内容
     */
    private void setTableContent(final MyTableUtil table) {
        int row =  table.getRowCount();
        int column = table.getColumnCount();
        Object[][] content = new Object [row][column];
        for(int i=0;i<row;i++){
            for(int j =0;j<column;j++){           
                 content[i][j]=table.get(i,j);
            }   
        }
        jTable_tableContent.setModel(new javax.swing.table.DefaultTableModel(
            content  ,
            table.getColumnNames()
        ) {
            
            //DefaultTableModel是一个匿名内部类，这个花括号内部相当于类的内部 
            //统一设置成字符串类型
            Class[] types = new Class [table.getColumnCount()];     //这是匿名内部类的成员变量
            
            {                                                                                  //这是一个构造代码块
                    for(int i=0;i<types.length;i++){                    
                        types[i]=java.lang.String.class;
                    }
            }
           
            //这是一个重载的方法                                                                              
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });

    }

    /**
     * 设置‘设计表’内容
     */
    private void setTableDesign(ArrayList<TableColumn> columns) {
       //获取表结构
        int row =  columns.size();
        Object[][] content = new Object [row][5];
        for(int i=0;i<row;i++){
                TableColumn c =  columns.get(i);
                 content[i][0]=c.getColumnName();
                 content[i][1]=c.getTypeName();
                 content[i][2]=c.getWidth();
                 content[i][3]=c.getPrecision();
                 content[i][4]=c.getScale();        
        }
        jTable_tableDesign.setModel(new javax.swing.table.DefaultTableModel(
            content  ,
            new String[]{"字段名","类型名","长度","精确度","范围"}
        ) {
            
            //DefaultTableModel是一个匿名内部类，这个花括号内部相当于类的内部 
            //统一设置成字符串类型
            Class[] types = new Class [5];     //这是匿名内部类的成员变量
            
            {                                                                                  //这是一个构造代码块
                    for(int i=0;i<types.length;i++){                    
                        types[i]=java.lang.String.class;
                    }
            }
           
            //这是一个重载的方法                                                                              
            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
    }

    private void setTableIndex(String tableName) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

}
